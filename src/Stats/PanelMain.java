package Stats;

import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * This is the first panel seen when the program starts. It contains the GUI
 * for importing CSV files and generating reports.
 *
 * @author Christopher Buss
 */
public class PanelMain extends javax.swing.JPanel {
    
    // The model part of the MVC pattern. It holds all of the data and 
    // preforms all of the actual functionality. 
    Model model;
    
    // Used for the file browser
    JFileChooser fileChooser;
    
    // Saves the radio button selection
    int radioButtonSelected = 1;
    
    /**
     * Creates new form StatsGUI
     */
    public PanelMain() {
        
        // Instantiate all the components
        model = Model.getInstance();
        listCountiesAndMunicipalities = new JList(model.getCountiesAndMunicipalities());
        fileChooser = new JFileChooser(System.getProperty("user.dir"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV Files", "csv");
        fileChooser.setFileFilter(filter);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        listCountiesAndMunicipalities = new javax.swing.JList();
        textFieldCSV = new javax.swing.JTextField();
        buttonBrowse = new javax.swing.JButton();
        buttonHelp = new javax.swing.JButton();
        buttonGenerateReport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        radioButtonQ1 = new javax.swing.JRadioButton();
        radioButtonQ2 = new javax.swing.JRadioButton();
        radioButtonQ3 = new javax.swing.JRadioButton();
        radioButtonQ4 = new javax.swing.JRadioButton();
        buttonImport = new javax.swing.JButton();
        labeStatus = new javax.swing.JLabel();
        radioButtonYear = new javax.swing.JRadioButton();
        buttonRules = new javax.swing.JButton();
        textFieldBaseYear = new javax.swing.JTextField();
        label1 = new java.awt.Label();

        setBackground(new java.awt.Color(140, 198, 63));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        listCountiesAndMunicipalities.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        listCountiesAndMunicipalities.setModel(model.getCountiesAndMunicipalities());
        listCountiesAndMunicipalities.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listCountiesAndMunicipalitiesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listCountiesAndMunicipalities);

        textFieldCSV.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        buttonBrowse.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonBrowse.setText("Browse");
        buttonBrowse.setOpaque(false);
        buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseActionPerformed(evt);
            }
        });

        buttonHelp.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonHelp.setText("Help");
        buttonHelp.setOpaque(false);
        buttonHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHelpActionPerformed(evt);
            }
        });

        buttonGenerateReport.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonGenerateReport.setText("Generate Reports");
        buttonGenerateReport.setOpaque(false);
        buttonGenerateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenerateReportActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setText("Municipality (County):");

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setText("CSV file:");

        radioButtonQ1.setBackground(new java.awt.Color(140, 198, 63));
        buttonGroup1.add(radioButtonQ1);
        radioButtonQ1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        radioButtonQ1.setSelected(true);
        radioButtonQ1.setText("Q1");
        radioButtonQ1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonQ1ActionPerformed(evt);
            }
        });

        radioButtonQ2.setBackground(new java.awt.Color(140, 198, 63));
        buttonGroup1.add(radioButtonQ2);
        radioButtonQ2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        radioButtonQ2.setText("Q2");
        radioButtonQ2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonQ2ActionPerformed(evt);
            }
        });

        radioButtonQ3.setBackground(new java.awt.Color(140, 198, 63));
        buttonGroup1.add(radioButtonQ3);
        radioButtonQ3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        radioButtonQ3.setText("Q3");
        radioButtonQ3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonQ3ActionPerformed(evt);
            }
        });

        radioButtonQ4.setBackground(new java.awt.Color(140, 198, 63));
        buttonGroup1.add(radioButtonQ4);
        radioButtonQ4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        radioButtonQ4.setText("Q4");
        radioButtonQ4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonQ4ActionPerformed(evt);
            }
        });

        buttonImport.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonImport.setText("Import");
        buttonImport.setOpaque(false);
        buttonImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImportActionPerformed(evt);
            }
        });

        labeStatus.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        radioButtonYear.setBackground(new java.awt.Color(140, 198, 63));
        buttonGroup1.add(radioButtonYear);
        radioButtonYear.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        radioButtonYear.setText("Entire Year");
        radioButtonYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonYearActionPerformed(evt);
            }
        });

        buttonRules.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonRules.setText("Reports");
        buttonRules.setOpaque(false);
        buttonRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRulesActionPerformed(evt);
            }
        });

        textFieldBaseYear.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        textFieldBaseYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldBaseYearActionPerformed(evt);
            }
        });

        label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        label1.setText("Base Year:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(labeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(149, 149, 149)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(buttonRules, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(buttonGenerateReport, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(radioButtonYear)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(radioButtonQ3)
                                                .addComponent(radioButtonQ1))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(radioButtonQ2)
                                                .addComponent(radioButtonQ4)))
                                        .addComponent(textFieldBaseYear, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonImport, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(270, 270, 270)
                        .addComponent(buttonBrowse)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(1, 1, 1)
                .addComponent(textFieldCSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBrowse)
                    .addComponent(buttonImport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(textFieldBaseYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonRules, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radioButtonQ2)
                                    .addComponent(radioButtonQ1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radioButtonQ3)
                                    .addComponent(radioButtonQ4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioButtonYear)
                                .addGap(18, 18, 18)
                                .addComponent(buttonGenerateReport, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labeStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        label1.getAccessibleContext().setAccessibleName("Base Year");
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Allows the user to browse for a .csv file. 
     * 
     * @param evt 
     */
    private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
        
        // Open the file browser dialog box.
        int returnVal = fileChooser.showOpenDialog(jLabel1);
        
        // If the user does not cancel, then save the path to the selected file.
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            textFieldCSV.setText(fileChooser.getSelectedFile().getAbsolutePath());
            model.setcsvFileLocation(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_buttonBrowseActionPerformed

    /**
     * Button to generate reports
     *
     * @param evt 
     */
    private void buttonGenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenerateReportActionPerformed
        try {
            
            // Pass quater selection to generateReports() method.
            model.generateReports(radioButtonSelected, Integer.parseInt(textFieldBaseYear.getText()));
            labeStatus.setText("Reports generated successfully.");
        } catch (Exception ex) {
            
            // Use a pop-up to inform a user that the report could not be 
            // generated.
            JOptionPane.showMessageDialog(null,
                "An error occured while attempting to generate reports:\n" 
                        + ex.getMessage(),
                "Generating Report Error:",
                JOptionPane.ERROR_MESSAGE);
            
            // Inform user that report generating was unsuccesfull.
            labeStatus.setText("Error while generating reports.");
            Logger.getLogger(PanelMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonGenerateReportActionPerformed

    /**
     * Unused for program
     * 
     * @param evt 
     */
    private void listCountiesAndMunicipalitiesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listCountiesAndMunicipalitiesValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_listCountiesAndMunicipalitiesValueChanged

    /**
     * Button to launch the html help file.
     * 
     * @param evt 
     */
    private void buttonHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHelpActionPerformed
        
        // Create an editor pane place the HTML file in it. 
        JEditorPane editorPane = new JEditorPane();
        editorPane.setEditable(false);
        java.net.URL helpURL = PanelMain.class.getResource("HelpMain.html");
        if (helpURL != null) {
            try {
                editorPane.setPage(helpURL);
            } catch (IOException e) {
                System.err.println("Attempted to read a bad URL: " + helpURL);
            }
        } else {
            System.err.println("Couldn't find file: HelpMain.html");
        }

        // Put the editor pane in a scroll pane.
        JScrollPane editorScrollPane = new JScrollPane(editorPane);
        editorScrollPane.setVerticalScrollBarPolicy(
                        JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        
        // Set up the demensions.
        editorScrollPane.setPreferredSize(new Dimension(250, 145));
        editorScrollPane.setMinimumSize(new Dimension(250, 145));
        
        // Create a JFrame to place the JScrollPane in and chow it.
        JFrame helpFrame = new JFrame();
        helpFrame.setContentPane(editorScrollPane);
        helpFrame.setSize(new Dimension(600, 600));
        helpFrame.setVisible(true);
    }//GEN-LAST:event_buttonHelpActionPerformed

    /**
     * RadioButton for selecting the 1st quarter.
     * 
     * @param evt 
     */
    private void radioButtonQ1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonQ1ActionPerformed
        
        // Hold selection.
        radioButtonSelected = 1;
    }//GEN-LAST:event_radioButtonQ1ActionPerformed

    /**
     * RadioButton for selecting the 2nd quarter.
     * 
     * @param evt 
     */
    private void radioButtonQ2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonQ2ActionPerformed
        
        // Hold selection.
        radioButtonSelected = 2;
    }//GEN-LAST:event_radioButtonQ2ActionPerformed

    /**
     * RadioButton for selecting an entire year.
     * 
     * @param evt 
     */
    private void radioButtonYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonYearActionPerformed
        
        // Hold selection.
        radioButtonSelected = 5;
    }//GEN-LAST:event_radioButtonYearActionPerformed

    /**
     * RadioButton for selecting the 3rd quarter.
     * 
     * @param evt 
     */
    private void radioButtonQ3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonQ3ActionPerformed
        
        // Hold selection.
        radioButtonSelected = 3;
    }//GEN-LAST:event_radioButtonQ3ActionPerformed

    /**
     * RadioButton for selecting the 4th quarter.
     * 
     * @param evt 
     */
    private void radioButtonQ4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonQ4ActionPerformed
        
        // Hold selection.
        radioButtonSelected = 4;
    }//GEN-LAST:event_radioButtonQ4ActionPerformed

    /**
     * Event for when the import button is clicked. This method imports
     * all of the relevant data from the selected .csv file into memory.
     * 
     * @param evt 
     */
    private void buttonImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImportActionPerformed
        try {
            
            // Import data.
            model.importCSVDataFromFile();
            
            // Inform user that the importing was succesful.
            labeStatus.setText("Done Importing.");
        } catch (FileNotFoundException ex) {
            
            // Use a pop-up to inform a user that the file was not found.
            JOptionPane.showMessageDialog(null,
                "The file you entered was not found by the program. " +
                "Click the \"Browse\" button to look for a valid .csv file.",
                "File Not Found Error",
                JOptionPane.ERROR_MESSAGE);
            
            // Inform user that the importing was unsuccesfull.
            labeStatus.setText("Error while Importing.");
        } catch (IOException ex) {
            Logger.getLogger(PanelMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonImportActionPerformed

    /**
     * Event to launch the FrameRule pop-up. 
     * 
     * @param evt 
     */
    private void buttonRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRulesActionPerformed
        FrameReport rules = new FrameReport();
        rules.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        rules.setVisible(true);
    }//GEN-LAST:event_buttonRulesActionPerformed

    private void textFieldBaseYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldBaseYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldBaseYearActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowse;
    private javax.swing.JButton buttonGenerateReport;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton buttonHelp;
    private javax.swing.JButton buttonImport;
    private javax.swing.JButton buttonRules;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labeStatus;
    private java.awt.Label label1;
    private javax.swing.JList listCountiesAndMunicipalities;
    private javax.swing.JRadioButton radioButtonQ1;
    private javax.swing.JRadioButton radioButtonQ2;
    private javax.swing.JRadioButton radioButtonQ3;
    private javax.swing.JRadioButton radioButtonQ4;
    private javax.swing.JRadioButton radioButtonYear;
    private javax.swing.JTextField textFieldBaseYear;
    private javax.swing.JTextField textFieldCSV;
    // End of variables declaration//GEN-END:variables
}
