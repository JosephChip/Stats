package Stats;

import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * This is the rule panel that that pops-up when the user clicks the rules
 * button on the FrameMain. It contains the GUI for loading/saving .rule
 * files that express how properties should be grouped in reports.
 *
 * @author Christopher Buss
 */
public class PanelReport extends javax.swing.JPanel {

    // The model part of the MVC pattern. It holds all of the data and 
    // preforms all of the actual functionality. 
    Model model;
    
    // Used for the file browser
    JFileChooser fileChooser;
    
    /**
     * Creates new form PanelRules
     */
    public PanelReport() {
        
        // Instantiate all the components
        model = Model.getInstance();
        listReports = new JList(model.getReportsList());
        fileChooser = new JFileChooser(System.getProperty("user.dir"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Rule Files", "rule");
        fileChooser.setFileFilter(filter);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textFieldRule = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        buttonBrowse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listRules = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        comboBoxWhere = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        buttonDeleteRule = new javax.swing.JButton();
        buttonAddRule = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonLoad = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        buttonHelp = new javax.swing.JButton();
        labeStatus = new javax.swing.JLabel();
        comboBoxEquals = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        listReports = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        textFieldReport = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        buttonAddReport = new javax.swing.JButton();
        buttonDeleteReport = new javax.swing.JButton();

        setBackground(new java.awt.Color(140, 198, 63));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        textFieldRule.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setText("Rule file:");

        buttonBrowse.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonBrowse.setText("Browse");
        buttonBrowse.setOpaque(false);
        buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseActionPerformed(evt);
            }
        });

        listRules.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(listRules);

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setText("Where");

        comboBoxWhere.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        comboBoxWhere.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "County", "Municipality", "Zip Code", "Body of Water", "Condo Name", "Category" }));
        comboBoxWhere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxWhereActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setText("equals");

        buttonDeleteRule.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonDeleteRule.setText("Delete");
        buttonDeleteRule.setOpaque(false);
        buttonDeleteRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteRuleActionPerformed(evt);
            }
        });

        buttonAddRule.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonAddRule.setText("Add");
        buttonAddRule.setOpaque(false);
        buttonAddRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddRuleActionPerformed(evt);
            }
        });

        buttonSave.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonSave.setText("Save");
        buttonSave.setOpaque(false);
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonLoad.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonLoad.setText("Load");
        buttonLoad.setOpaque(false);
        buttonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoadActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel4.setText("Rules in effect:");

        buttonHelp.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonHelp.setText("Help");
        buttonHelp.setOpaque(false);
        buttonHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHelpActionPerformed(evt);
            }
        });

        labeStatus.setBackground(new java.awt.Color(140, 198, 63));
        labeStatus.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        comboBoxEquals.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        comboBoxEquals.setModel(model.getEqualsDropdownArray(0)
        );
        comboBoxEquals.setMaximumSize(new java.awt.Dimension(25, 229));
        comboBoxEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEqualsActionPerformed(evt);
            }
        });

        listReports.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        listReports.setModel(model.getReportsList());
        listReports.setMaximumSize(new java.awt.Dimension(130, 485));
        listReports.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listReportsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listReports);

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel5.setText("Reports:");

        textFieldReport.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        textFieldReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldReportActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel6.setText("Report:");

        buttonAddReport.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonAddReport.setText("Add");
        buttonAddReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddReportActionPerformed(evt);
            }
        });

        buttonDeleteReport.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        buttonDeleteReport.setText("Delete");
        buttonDeleteReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textFieldRule)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonLoad))
                            .addComponent(jLabel5))
                        .addGap(52, 52, 52)
                        .addComponent(labeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(buttonBrowse))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(buttonDeleteRule)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonAddRule, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(buttonDeleteReport)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonAddReport, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldReport))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonHelp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxWhere, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(comboBoxEquals, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldRule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonSave)
                            .addComponent(buttonLoad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addComponent(buttonBrowse)
                    .addComponent(labeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textFieldReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddReport)
                    .addComponent(buttonDeleteReport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(comboBoxEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxWhere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddRule)
                    .addComponent(buttonDeleteRule))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Allows the user to browse for a .rule file. 
     * 
     * @param evt 
     */
    private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
        
        // Open the file browser dialog box.
        int returnVal = fileChooser.showOpenDialog(jLabel1);
        
        // If the user does not cancel, then save the path to the selected file.
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            textFieldRule.setText(fileChooser.getSelectedFile().getAbsolutePath());
            model.setRuleFileLocation(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_buttonBrowseActionPerformed

    /**
     * Event for when the load button is clicked. This method loads
     * the .rule file into the program.
     * 
     * @param evt 
     */
    private void buttonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoadActionPerformed
        try {
            
            // Load the rules.
            model.importRuleDataFromFile();
            
            // Inform user that the load was successful.
            labeStatus.setText("Done Importing.");
        } catch (FileNotFoundException ex) {
            
            // Use a pop-up to inform a user that the file was not found.
            JOptionPane.showMessageDialog(null,
                "The file you entered was not found by the program. " +
                "Click the \"Browse\" button to look for a valid .rule file.",
                "File Not Found Error",
                JOptionPane.ERROR_MESSAGE);
            labeStatus.setText("Error while Loading.");
        } catch (IOException ex) {
            Logger.getLogger(PanelMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonLoadActionPerformed

    /**
     * Button to launch the html help file.
     * 
     * @param evt 
     */
    private void buttonHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHelpActionPerformed
        
        // Create an editor pane place the HTML file in it. 
        JEditorPane editorPane = new JEditorPane();
        editorPane.setEditable(false);
        java.net.URL helpURL = PanelMain.class.getResource("HelpRule.html");
        if (helpURL != null) {
            try {
                editorPane.setPage(helpURL);
            } catch (IOException e) {
                System.err.println("Attempted to read a bad URL: " + helpURL);
            }
        } else {
            System.err.println("Couldn't find file: HelpRule.html");
        }

        // Put the editor pane in a scroll pane.
        JScrollPane editorScrollPane = new JScrollPane(editorPane);
        editorScrollPane.setVerticalScrollBarPolicy(
                        JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        
        // Set up the demensions.
        editorScrollPane.setPreferredSize(new Dimension(250, 145));
        editorScrollPane.setMinimumSize(new Dimension(250, 145));
        
        // Create a JFrame to place the JScrollPane in and chow it.
        JFrame helpFrame = new JFrame();
        helpFrame.setContentPane(editorScrollPane);
        helpFrame.setSize(new Dimension(600, 600));
        helpFrame.setVisible(true);
    }//GEN-LAST:event_buttonHelpActionPerformed

    /**
     * Event to save the current .rule when the save button is pressed.
     * 
     * @param evt 
     */
    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        try {
           
            // Save the file.
            model.saveRuleFile();
            
            // Let the user know that the file was saved successful.
            labeStatus.setText("File Saved.");
        } catch (IOException ex) {
            
                // Let the user know if the file could not be saved.
                        JOptionPane.showMessageDialog(null,
                "The file could not be saved",
                "File Not Saved Error",
                JOptionPane.ERROR_MESSAGE);
                        
            // Let the uesr know that the file was not saved.
            labeStatus.setText("Error while Saving.");
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    /**
     * Event to add a new rule.
     * 
     * @param evt 
     */
    private void buttonAddRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddRuleActionPerformed
        
        // Add the new rule.
        model.addRule(comboBoxWhere.getSelectedIndex(), 
                (String) comboBoxEquals.getItemAt(comboBoxEquals.getSelectedIndex()));
    }//GEN-LAST:event_buttonAddRuleActionPerformed

    /**
     * Event to delete a rule.
     * 
     * @param evt 
     */
    private void buttonDeleteRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteRuleActionPerformed
        
        // Get index of each selected entry only if at least one entry is
        // selected.
        int [] selected = listRules.getSelectedIndices();
        if(selected.length != 0) {
            model.deleteRules(selected);
        }
    }//GEN-LAST:event_buttonDeleteRuleActionPerformed

    /**
     * Will select the appropriate array to populate the "equals" dropbox 
     * according to the item selected in the "where" dropbox.
     * 
     * @param evt 
     */
    private void comboBoxWhereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxWhereActionPerformed
        DefaultComboBoxModel combo = model.getEqualsDropdownArray(
                comboBoxWhere.getSelectedIndex());
        comboBoxEquals.setModel(combo);
    }//GEN-LAST:event_comboBoxWhereActionPerformed

    /**
     * Unused for program
     * 
     * @param evt 
     */
    private void comboBoxEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEqualsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxEqualsActionPerformed

    private void textFieldReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldReportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldReportActionPerformed

    /**
     * Event to add a new report.
     * 
     * @param evt 
     */
    private void buttonAddReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddReportActionPerformed
        
        String report = textFieldReport.getText().trim();
        
        // Add the report if it is not an empty string.
        if(report.length() > 0) {
            model.addReport(textFieldReport.getText());
            textFieldReport.setText("");
        }
    }//GEN-LAST:event_buttonAddReportActionPerformed

    /**
     * Event to delete a report.
     * 
     * @param evt 
     */
    private void buttonDeleteReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteReportActionPerformed
        
        // Delete the report.
        model.deleteReport((String)listReports.getSelectedValue());
    }//GEN-LAST:event_buttonDeleteReportActionPerformed

    private void listReportsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listReportsMouseClicked
        String report = (String) listReports.getSelectedValue();
        model.setSelectedReport(report);
        if(report != null) {
            listRules.setModel(model.getRulesList(report));
        }
    }//GEN-LAST:event_listReportsMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddReport;
    private javax.swing.JButton buttonAddRule;
    private javax.swing.JButton buttonBrowse;
    private javax.swing.JButton buttonDeleteReport;
    private javax.swing.JButton buttonDeleteRule;
    private javax.swing.JButton buttonHelp;
    private javax.swing.JButton buttonLoad;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox comboBoxEquals;
    private javax.swing.JComboBox comboBoxWhere;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labeStatus;
    private javax.swing.JList listReports;
    private javax.swing.JList listRules;
    private javax.swing.JTextField textFieldReport;
    private javax.swing.JTextField textFieldRule;
    // End of variables declaration//GEN-END:variables
}
